CMAKE_MINIMUM_REQUIRED(VERSION 3.4)
PROJECT(TinyRPC)

SET(CMAKE_BUILD_TYPE Release)

INCLUDE_DIRECTORIES(./include ./tinyrpc)
LINK_DIRECTORIES(./lib)

IF (WIN32)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++14")
	ADD_DEFINITIONS(-D_WINSOCK_DEPRECATED_NO_WARNINGS)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	ADD_DEFINITIONS(-DWIN32_LEAN_AND_MEAN)
	ADD_DEFINITIONS(-DVC_EXTRALEAN)
	ADD_DEFINITIONS(-D_GNU_SOURCE)
ELSEIF (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -Wno-unused-local-typedef -std=c++14")
ENDIF()


SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)
ADD_DEFINITIONS(-DTINYRPC_FMT=tinyrpc_fmt)
#ADD_DEFINITIONS(-DTINYRPC_LOGGING)
ADD_DEFINITIONS(-DRPCLIB_ENABLE_LOGGING)
ADD_DEFINITIONS(-DASIO_STANDALONE)
ADD_DEFINITIONS(-DASIO_HAS_STD_ADDRESSOF)
ADD_DEFINITIONS(-DASIO_HAS_STD_ARRAY)
ADD_DEFINITIONS(-DASIO_HAS_CSTDINT)
ADD_DEFINITIONS(-DASIO_HAS_STD_SHARED_PTR)
ADD_DEFINITIONS(-DASIO_HAS_STD_TYPE_TRAITS)

# 添加 common 子目录
ADD_SUBDIRECTORY(tinyrpc)
ADD_SUBDIRECTORY(tinyntp)


